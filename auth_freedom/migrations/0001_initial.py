# Generated by Django 5.1.3 on 2024-11-08 11:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('recruiter', 'Рекрутер'), ('candidate', 'Кандидат'), ('admin', 'Администратор')], max_length=20, verbose_name='Тип пользователя')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Подтвержден')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CandidateProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience', models.IntegerField(verbose_name='Опыт работы (лет)')),
                ('specialization', models.CharField(max_length=100, verbose_name='Специализация')),
                ('tech_stack', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), size=None, verbose_name='Технический стек')),
                ('level', models.CharField(choices=[('junior', 'Junior'), ('middle', 'Middle'), ('senior', 'Senior'), ('lead', 'Lead')], max_length=20, verbose_name='Уровень')),
                ('education', models.JSONField(verbose_name='Образование')),
                ('certifications', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, size=None, verbose_name='Сертификаты')),
                ('languages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), size=None, verbose_name='Языки')),
                ('desired_salary', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Желаемая зарплата')),
                ('location', models.CharField(max_length=100, verbose_name='Местоположение')),
                ('skills', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None, verbose_name='Навыки')),
                ('resume_text', models.TextField(verbose_name='Текст резюме')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Профиль кандидата',
                'verbose_name_plural': 'Профили кандидатов',
            },
        ),
        migrations.CreateModel(
            name='RecruiterProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience', models.IntegerField(verbose_name='Опыт работы (лет)')),
                ('specialization', models.CharField(max_length=100, verbose_name='Специализация')),
                ('successful_hires', models.IntegerField(default=0, verbose_name='Успешные наймы')),
                ('company', models.CharField(max_length=100, verbose_name='Компания')),
                ('region', models.CharField(max_length=100, verbose_name='Регион')),
                ('languages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), size=None, verbose_name='Языки')),
                ('active_vacancies', models.IntegerField(default=0, verbose_name='Активные вакансии')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recruiter_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Профиль рекрутера',
                'verbose_name_plural': 'Профили рекрутеров',
            },
        ),
    ]
